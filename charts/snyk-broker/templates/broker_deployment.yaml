{{ $setTlsRejectUnauthorized := include "snyk-broker.setTlsRejectUnauthorized" . }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.scmType}}-broker{{if not .Values.disableSuffixes }}-{{ .Release.Name }}{{ end }}"
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "snyk-broker.labels" . }}
spec:
  {{- if .Values.highAvailabilityMode.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{ else }}
  replicas: 1
  {{- end }}
  selector:
    matchLabels:
      {{- include "snyk-broker.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "snyk-broker.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.extraPodSpecs }}
          {{- toYaml .Values.extraPodSpecs | nindent 6 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "snyk-broker.serviceAccountName" . }}{{if not .Values.disableSuffixes }}-{{ .Release.Name }}{{ end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: "{{ .Values.scmType}}-broker{{if not .Values.disableSuffixes }}-{{ .Release.Name }}{{ end }}"
          resources:
            limits:
              cpu: {{ .Values.brokerResources.limits.cpu }}
              memory: {{ .Values.brokerResources.limits.memory }}
            requests:
              cpu: {{ .Values.brokerResources.requests.cpu }}
              memory: {{ .Values.brokerResources.requests.memory}}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- if .Values.image.tag }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}-{{ .Values.scmType }}"
          {{- else }}
          image: "{{ .Values.image.repository }}:{{ .Values.scmType }}"
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.deployment.container.containerPort }}
          {{- if .Values.brokerLivenessProbe.enabled }}
          livenessProbe:
            httpGet:
              port: {{ .Values.deployment.container.containerPort }}
              path: {{ .Values.brokerLivenessProbe.path }}
              {{- if or ( and (.Values.httpsCert) (.Values.httpsKey) ) ( .Values.enableBrokerLocalWebserverOverHttps ) }}
              scheme: HTTPS
              {{- else }}
              scheme: HTTP
              {{- end }}
            {{- toYaml .Values.brokerLivenessProbe.config | nindent 12 }}
          {{- end }}
          {{- if .Values.brokerReadinessProbe.enabled }}
          readinessProbe:
            httpGet:
              port: {{ .Values.deployment.container.containerPort }}
              path: {{ .Values.brokerReadinessProbe.path }}
              {{- if or ( and (.Values.httpsCert) (.Values.httpsKey) ) ( .Values.enableBrokerLocalWebserverOverHttps ) }}
              scheme: HTTPS
              {{- else }}
              scheme: HTTP
              {{- end }}
            {{- toYaml .Values.brokerReadinessProbe.config | nindent 12 }}
          {{- end }}
          {{- if .Values.extraContainerSpecs }}
          {{- toYaml .Values.extraContainerSpecs | nindent 10 }}
          {{- end }}
          volumeMounts:
              {{- if (include "snyk-broker.acceptJson" .)}}
              - name: {{ include "snyk-broker.fullname" . }}-accept-volume
                mountPath: /home/node/private
                readOnly: true
              {{- end }}
              {{- if or (.Values.caCert) (.Values.caCertFile) }}
              - name: {{ include "snyk-broker.fullname" . }}-cacert-volume
                mountPath: /home/node/cacert
                readOnly: true
              {{- end }}
              {{- if and (.Values.httpsCert) (.Values.httpsKey) }}
              - name: {{ include "snyk-broker.fullname" . }}-tls-secret-volume
                mountPath: /home/node/tls-cert/
                readOnly: true
              {{- end }}
{{- if .Values.extraVolumeMounts }}
{{ tpl (toYaml .Values.extraVolumeMounts | indent 14) . }}
{{- end }}
          env:
            - name: BROKER_SERVER_URL
              value: {{ .Values.brokerServerUrl }}
            - name: BROKER_HEALTHCHECK_PATH
              value: {{ .Values.healthCheckPath }}
            - name: BROKER_SYSTEMCHECK_PATH
              value: {{ .Values.systemCheckPath }}
          {{- if eq .Values.scmType "github-com" }}
          # GitHub
            - name: BROKER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType}}-broker-token{{if not .Values.disableSuffixes }}-{{ .Release.Name }}{{ end }}
                  key: "{{ .Values.scmType}}-broker-token-key"
            {{- if not .Values.useExternalSecretScmTokenPool }}
            - name: GITHUB_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType}}-token{{if not .Values.disableSuffixes }}-{{ .Release.Name }}{{ end }}
                  key: "{{ .Values.scmType}}-token-key"
            {{- end }}
            {{- if or (.Values.scmTokenPool) (.Values.useExternalSecretScmTokenPool) }}
            - name: GITHUB_TOKEN_POOL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType }}-token-pool{{if not .Values.disableSuffixes }}-{{ .Release.Name }}{{ end }}
                  key: "{{ .Values.scmType}}-token-key-pool"
                {{- end }}
            - name: PORT
              value: {{ .Values.deployment.container.containerPort | squote }}
            - name: BROKER_CLIENT_URL
              value: {{ .Values.brokerClientUrl }}
          {{- end }}
          {{- if eq .Values.scmType "github-enterprise" }}
          # GitHub Enterprise
            - name: BROKER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType}}-broker-token{{if not .Values.disableSuffixes }}-{{ .Release.Name }}{{ end }}
                  key: "{{ .Values.scmType}}-broker-token-key"
            {{- if not .Values.useExternalSecretScmTokenPool }}
            - name: GITHUB_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType}}-token{{if not .Values.disableSuffixes }}-{{ .Release.Name }}{{ end }}
                  key: "{{ .Values.scmType}}-token-key"
            {{- end }}
            {{- if or (.Values.scmTokenPool) (.Values.useExternalSecretScmTokenPool) }}
            - name: GITHUB_TOKEN_POOL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType }}-token-pool{{if not .Values.disableSuffixes }}-{{ .Release.Name }}{{ end }}
                  key: "{{ .Values.scmType}}-token-key-pool"
            {{- end }}
            - name: GITHUB
              value: {{ .Values.github }}
            - name: GITHUB_API
              value: {{ .Values.githubApi }}
            - name: GITHUB_GRAPHQL
              value: {{ .Values.githubGraphQl}}
            - name: PORT
              value: {{ .Values.deployment.container.containerPort | squote }}
            - name: BROKER_CLIENT_URL
              value: {{ .Values.brokerClientUrl }}

          {{- end }}
          {{- if eq .Values.scmType "bitbucket-server" }}
          # Bitbucket
            - name: BROKER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType}}-broker-token{{if not .Values.disableSuffixes }}-{{ .Release.Name }}{{ end }}
                  key: "{{ .Values.scmType}}-broker-token-key"
            - name: BITBUCKET_USERNAME
              value: {{ .Values.bitbucketUsername }}
            - name: BITBUCKET_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType}}-token{{if not .Values.disableSuffixes }}-{{ .Release.Name }}{{ end }}
                  key: "{{ .Values.scmType}}-token-key"
            - name: BITBUCKET
              value: {{ .Values.bitbucket }}
            - name: BITBUCKET_API
              value: {{ .Values.bitbucketApi }}
            - name: PORT
              value: {{ .Values.deployment.container.containerPort | squote }}
            - name: BROKER_CLIENT_URL
              value: {{ .Values.brokerClientUrl }}
          {{- end }}
          {{- if eq .Values.scmType "bitbucket-server-bearer-auth" }}
          # Bitbucket Bearer Auth
            - name: BROKER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType}}-broker-token{{if not .Values.disableSuffixes }}-{{ .Release.Name }}{{ end }}
                  key: "{{ .Values.scmType}}-broker-token-key"
            - name: BITBUCKET_PAT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType}}-token{{if not .Values.disableSuffixes }}-{{ .Release.Name }}{{ end }}
                  key: "{{ .Values.scmType}}-token-key"
            - name: BITBUCKET
              value: {{ .Values.bitbucket }}
            - name: BITBUCKET_API
              value: {{ .Values.bitbucketApi }}
            - name: PORT
              value: {{ .Values.deployment.container.containerPort | squote }}
            - name: BROKER_CLIENT_URL
              value: {{ .Values.brokerClientUrl }}
          {{- end }}
          {{- if eq .Values.scmType "gitlab" }}
          # GitLab
            - name: BROKER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType}}-broker-token{{if not .Values.disableSuffixes }}-{{ .Release.Name }}{{ end }}
                  key: "{{ .Values.scmType}}-broker-token-key"
            {{- if not .Values.useExternalSecretScmTokenPool }}
            - name: GITLAB_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType}}-token{{if not .Values.disableSuffixes }}-{{ .Release.Name }}{{ end }}
                  key: "{{ .Values.scmType}}-token-key"
            {{- end }}
            {{- if or (.Values.scmTokenPool) (.Values.useExternalSecretScmTokenPool) }}
            - name: GITLAB_TOKEN_POOL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType }}-token-pool{{if not .Values.disableSuffixes }}-{{ .Release.Name }}{{ end }}
                  key: "{{ .Values.scmType}}-token-key-pool"
                {{- end }}
            - name: GITLAB
              value: {{ .Values.gitlab }}
            - name: PORT
              value: {{ .Values.deployment.container.containerPort | squote }}
            - name: BROKER_CLIENT_URL
              value: {{ .Values.brokerClientUrl }}
          {{- end }}
          {{- if eq .Values.scmType "azure-repos" }}
          # Azure Repos
            - name: BROKER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType}}-broker-token{{if not .Values.disableSuffixes }}-{{ .Release.Name }}{{ end }}
                  key: "{{ .Values.scmType}}-broker-token-key"
            - name: AZURE_REPOS_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType}}-token{{if not .Values.disableSuffixes }}-{{ .Release.Name }}{{ end }}
                  key: "{{ .Values.scmType}}-token-key"
            - name: AZURE_REPOS_ORG
              value: {{ .Values.azureReposOrg }}
            - name: AZURE_REPOS_HOST
              value: {{ .Values.azureReposHost }}
            - name: PORT
              value: {{ .Values.deployment.container.containerPort | squote }}
            - name: BROKER_CLIENT_URL
              value: {{ .Values.brokerClientUrl }}
          {{- end }}
          {{- if eq .Values.scmType "artifactory" }}
          # Artifactory
            - name: BROKER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType}}-broker-token{{if not .Values.disableSuffixes }}-{{ .Release.Name }}{{ end }}
                  key: "{{ .Values.scmType}}-broker-token-key"
            - name: ARTIFACTORY_URL
              valueFrom:
                secretKeyRef:
                  name: artifactory-url{{if not .Values.disableSuffixes }}-{{ .Release.Name }}{{ end }}
                  key: "artifactory-url"
            - name: PORT
              value: {{ .Values.deployment.container.containerPort | squote }}
            - name: BROKER_CLIENT_URL
              value: {{ .Values.brokerClientUrl }}
            {{- if .Values.brokerClientValidationUrl }}
            - name: BROKER_CLIENT_VALIDATION_URL
              valueFrom:
                secretKeyRef:
                  name: artifactory-broker-client-validation-url{{if not .Values.disableSuffixes }}-{{ .Release.Name }}{{ end }}
                  key: "artifactory-broker-client-validation-url"
            {{- end }}
          {{- end }}
          {{- if or (eq .Values.scmType "nexus") (eq .Values.scmType "nexus2") }}
          # Nexus (3 or 2)
            - name: BROKER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType }}-broker-token{{if not .Values.disableSuffixes }}-{{ .Release.Name }}{{ end }}
                  key: "{{ .Values.scmType}}-broker-token-key"
            - name: BASE_NEXUS_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType }}-base-nexus-url{{if not .Values.disableSuffixes }}-{{ .Release.Name }}{{ end }}
                  key: "{{ .Values.scmType}}-base-nexus-url"
            - name: NEXUS_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType }}-nexus-url{{if not .Values.disableSuffixes }}-{{ .Release.Name }}{{ end }}
                  key: "{{ .Values.scmType}}-nexus-url"
            - name: BROKER_CLIENT_VALIDATION_URL
              valueFrom:
                secretKeyRef:
                  name: nexus-broker-client-validation-url{{if not .Values.disableSuffixes }}-{{ .Release.Name }}{{ end }}
                  key: "nexus-broker-client-validation-url"
            - name: PORT
              value: {{ .Values.deployment.container.containerPort | squote }}
          {{- end }}
          {{- if eq .Values.scmType "jira" }}
          # Jira
            - name: BROKER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType}}-broker-token{{if not .Values.disableSuffixes }}-{{ .Release.Name }}{{ end }}
                  key: "{{ .Values.scmType}}-broker-token-key"
            - name: JIRA_USERNAME
              value: {{ .Values.jiraUsername }}
            - name: JIRA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType}}-token{{if not .Values.disableSuffixes }}-{{ .Release.Name }}{{ end }}
                  key: "{{ .Values.scmType}}-token-key"
            - name: JIRA_HOSTNAME
              value: {{ .Values.jiraHostname }}
            - name: PORT
              value: {{ .Values.deployment.container.containerPort | squote }}
            - name: BROKER_CLIENT_URL
              value: {{ .Values.brokerClientUrl }}
          {{- end }}
          {{- if eq .Values.scmType "jira-bearer-auth" }}
          # Jira
            - name: BROKER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType}}-broker-token{{if not .Values.disableSuffixes }}-{{ .Release.Name }}{{ end }}
                  key: "{{ .Values.scmType}}-broker-token-key"
            - name: JIRA_PAT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType}}-token{{if not .Values.disableSuffixes }}-{{ .Release.Name }}{{ end }}
                  key: "{{ .Values.scmType}}-token-key"
            - name: JIRA_HOSTNAME
              value: {{ .Values.jiraHostname }}
            - name: PORT
              value: {{ .Values.deployment.container.containerPort | squote }}
            - name: BROKER_CLIENT_URL
              value: {{ .Values.brokerClientUrl }}
          {{- end }}
          {{- if eq .Values.scmType "container-registry-agent" }}
          # Container Registry Agent
            - name: BROKER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType}}-broker-token{{if not .Values.disableSuffixes }}-{{ .Release.Name }}{{ end }}
                  key: "{{ .Values.scmType}}-broker-token-key"
            - name: CR_AGENT_URL
              value: http://cra-service{{if not .Values.disableSuffixes }}-{{ .Release.Name }}{{ end }}:{{ .Values.deployment.container.crSnykPort | toString }}
            - name: CR_TYPE
              value: {{ .Values.crType }}
            {{- if not (has .Values.crType (list "ecr")) }}
            - name: CR_BASE
              value: {{ .Values.crBase }}
            {{- end }}
            {{- if not (has .Values.crType (list "ecr" "digitalocean-cr")) }}
            - name: CR_USERNAME
              value: {{ .Values.crUsername }}
            - name: CR_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType}}-token{{if not .Values.disableSuffixes }}-{{ .Release.Name }}{{ end }}
                  key: "{{ .Values.scmType}}-token-key"
            {{- end }}
            {{- if has .Values.crType (list "digitalocean-cr") }}
            - name: CR_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType}}-token{{if not .Values.disableSuffixes }}-{{ .Release.Name }}{{ end }}
                  key: "{{ .Values.scmType}}-token-key"
            {{- end }}
            {{- if has .Values.crType (list "ecr") }}
            - name: CR_ROLE_ARN
              value: {{ .Values.crRoleArn }}
            - name: CR_REGION
              value: {{ .Values.crRegion }}
            - name: CR_EXTERNAL_ID
              value: {{ .Values.crExternalId }}
            {{- end }}
            - name: PORT
              value: {{ .Values.deployment.container.containerPort | squote }}
            - name: BROKER_CLIENT_URL
              value: "http://{{ include "snyk-broker.brokerServiceName" . }}:{{ .Values.service.port }}"
            - name: BROKER_CLIENT_VALIDATION_URL
              value: http://cra-service{{if not .Values.disableSuffixes }}-{{ .Release.Name }}{{ end }}:{{ .Values.deployment.container.crSnykPort | toString }}/healthcheck
          {{- end }}
         {{- if .Values.enableCodeAgent }}
         # Code Agent
            - name: GIT_CLIENT_URL
              value: {{ default (printf "http://code-agent-service:%s" (.Values.deployment.container.caSnykPort | toString)) .Values.gitClientUrl }}
         {{- end }}
         # Logging
            - name: LOG_LEVEL
              value: {{ .Values.logLevel }}
            - name: LOG_ENABLE_BODY
              value: {{ .Values.logEnableBody | squote }}

         {{- if and (.Values.caCert) (not .Values.caCertFile) }}
         # HTTPS Inspection
            - name: CA_CERT
              value: /home/node/cacert/{{ .Values.caCert }}
            - name: NODE_EXTRA_CA_CERTS
              value: /home/node/cacert/{{ .Values.caCert }}
         {{- end }}
         {{- if and (.Values.caCertFile) (not .Values.caCert) }}
          # HTTPS Inspection
            - name: CA_CERT
              value: /home/node/cacert/cacert
            - name: NODE_EXTRA_CA_CERTS
              value: /home/node/cacert/cacert
         {{- end }}

         {{- if .Values.httpsCert }}
         # HTTPS Config
            - name: HTTPS_CERT
              value: /home/node/tls-cert/tls.crt
         {{- end }}
         {{- if .Values.httpsKey }}
            - name: HTTPS_KEY
              value: /home/node/tls-cert/tls.key
         {{- end }}
         {{- if or ( and $setTlsRejectUnauthorized (not .Values.caCert ) (not .Values.caCertFile) ) ( and (or .Values.caCert .Values.caCertFile ) .Values.disableCaCertTrust ) }}
         # Troubleshooting - Set to 0 for SSL inspection testing
            - name: NODE_TLS_REJECT_UNAUTHORIZED
              value: "0"
         {{- end }}

         {{- if .Values.httpProxy }}
         # HTTP Proxy Settings
            - name: HTTP_PROXY
              value: {{ .Values.httpProxy }}
         {{- end }}

         {{- if .Values.httpsProxy }}
         # HTTPS Proxy Settings
            - name: HTTPS_PROXY
              value: {{ .Values.httpsProxy }}
         {{- end }}

         {{- if .Values.noProxy }}
         # No Proxy Settings
            - name: NO_PROXY
              value: {{ include "snyk-broker.noProxy" . }}
         {{- end }}

         {{- if (include "snyk-broker.acceptJson" .)}}
         # Accept.json Environment Variables
            - name: ACCEPT
              value: /home/node/private/accept.json
         {{ else }}
          {{- if has .Values.scmType ( list "github-com" "github-enterprise" "bitbucket-server" "bitbucket-server-bearer-auth" "gitlab" "azure-repos") }}
          {{- if not .Values.disableAutoAcceptRules  }}
          # Default Values to allow Snyk Code Snippets and Snyk IaC
            - name: ACCEPT_CODE
              value: "true"
            - name: ACCEPT_IAC
              value: "tf,yaml,yml,json,tpl"
          {{- end}}
          {{- if .Values.enableAppRisk }}
            - name: ACCEPT_APPRISK
              value: "true"
          {{- end }}
          {{- end}}
         {{- end }}
         # Broker Configuration
        {{- if not .Values.preflightChecks.enabled }}
            - name: PREFLIGHT_CHECKS_ENABLED
              value: "false"
        {{- end}}
        {{- if .Values.highAvailabilityMode.enabled }}
            - name: BROKER_HA_MODE_ENABLED
              value: "true"
        {{- end}}
        {{- range .Values.env }}
         # custom env var in override.yaml
            - name: {{ .name }}
              value: {{ .value | squote }}
        {{- end}}
            - name: BROKER_DISPATCHER_BASE_URL
              value: {{ .Values.brokerDispatcherUrl }}
      # Mount Accept.json and Certs
      volumes:
      {{- if (include "snyk-broker.acceptJson" .)}}
      - name: {{ include "snyk-broker.fullname" . }}-accept-volume
        configMap:
          name: {{ include "snyk-broker.fullname" . }}-accept-configmap{{if not .Values.disableSuffixes }}-{{ .Release.Name }}{{ end }}
      {{- end }}
      {{- if or (.Values.caCert) (.Values.caCertFile) }}
      - name: {{ include "snyk-broker.fullname" . }}-cacert-volume
        secret:
          secretName: {{ include "snyk-broker.caCertSecretName" . }}
      {{- end }}
      {{- if and (.Values.httpsCert) (.Values.httpsKey) }}
      - name: {{ include "snyk-broker.fullname" . }}-tls-secret-volume
        secret:
          secretName: {{ include "snyk-broker.tlsSecretName" . }}
      {{- end }}
{{- if .Values.extraVolumes }}
{{ tpl (toYaml .Values.extraVolumes | indent 6) . }}
{{- end }}
