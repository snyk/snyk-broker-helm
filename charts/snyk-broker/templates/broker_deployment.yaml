apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.scmType}}-broker"
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "snyk-broker.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "snyk-broker.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "snyk-broker.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "snyk-broker.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: "{{ .Values.scmType}}-broker"
          resources:
            limits:
              cpu: {{ .Values.brokerResources.limits.cpu }}
              memory: {{ .Values.brokerResources.limits.memory }}
            requests:
              cpu: {{ .Values.brokerResources.requests.cpu }}
              memory: {{ .Values.brokerResources.requests.memory}}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.scmType}}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.deployment.container.containerPort }}
          {{- if .Values.brokerLivenessProbe.enabled }}
          livenessProbe:
            httpGet:
              port: {{ .Values.deployment.container.containerPort }}
              path: {{ .Values.brokerLivenessProbe.path }}
            {{- toYaml .Values.brokerLivenessProbe.config | nindent 12 }}
          {{- end }}
          {{- if .Values.brokerReadinessProbe.enabled }}
          readinessProbe:
            httpGet:
              port: {{ .Values.deployment.container.containerPort }}
              path: {{ .Values.brokerReadinessProbe.path }}
            {{- toYaml .Values.brokerReadinessProbe.config | nindent 12 }}
          {{- end }}
          volumeMounts:
              {{- if (include "snyk-broker.acceptJson" .)}}
              - name: {{ include "snyk-broker.fullname" . }}-accept-volume
                mountPath: /home/node/private
                readOnly: true
              {{- end }}
              {{- if .Values.caCert }}
              - name: {{ include "snyk-broker.fullname" . }}-cacert-volume
                mountPath: /home/node/cacert
                readOnly: true
              {{- end }}
              {{- if .Values.httpsCert }}
              - name: {{ include "snyk-broker.fullname" . }}-httpscert-volume
                mountPath: /home/node/httpscert
                readOnly: true
              {{- end }}
              {{- if .Values.httpsKey }}
              - name: {{ include "snyk-broker.fullname" . }}-httpskey-volume
                mountPath: /home/node/httpskey
                readOnly: true
              {{- end }}              
          env:
            - name: BROKER_SERVER_URL
              value: {{ .Values.brokerServerUrl }}
            - name: BROKER_HEALTHCHECK_PATH
              value: {{ .Values.healthCheckPath }}
            - name: BROKER_SYSTEMCHECK_PATH
              value: {{ .Values.systemCheckPath }}
          {{- if eq .Values.scmType "github-com" }}
       # Github
            - name: BROKER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType}}-broker-token
                  key: "{{ .Values.scmType}}-broker-token-key"
            - name: GITHUB_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType}}-token
                  key: "{{ .Values.scmType}}-token-key"
            - name: PORT
              value: {{ .Values.deployment.container.containerPort | squote }}
            - name: BROKER_CLIENT_URL
              value: {{ .Values.brokerClientUrl }}
          {{- end }}
          {{- if eq .Values.scmType "github-enterprise" }}
        # Github Enterprise
            - name: BROKER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType}}-broker-token
                  key: "{{ .Values.scmType}}-broker-token-key"
            - name: GITHUB_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType}}-token
                  key: "{{ .Values.scmType}}-token-key"
            - name: GITHUB
              value: {{ .Values.github }}
            - name: GITHUB_API
              value: {{ .Values.githubApi }}
            - name: GITHUB_GRAPHQL
              value: {{ .Values.githubGraphQl}}              
            - name: PORT
              value: {{ .Values.deployment.container.containerPort | squote }}
            - name: BROKER_CLIENT_URL
              value: {{ .Values.brokerClientUrl }}

          {{- end }}
          {{- if eq .Values.scmType "bitbucket-server" }}
        # Bitbucket
            - name: BROKER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType}}-broker-token
                  key: "{{ .Values.scmType}}-broker-token-key"
            - name: BITBUCKET_USERNAME
              value: {{ .Values.bitbucketUsername }}
            - name: BITBUCKET_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType}}-token
                  key: "{{ .Values.scmType}}-token-key"
            - name: BITBUCKET
              value: {{ .Values.bitbucket }}
            - name: BITBUCKET_API
              value: {{ .Values.bitbucketApi }}              
            - name: PORT
              value: {{ .Values.deployment.container.containerPort | squote }}
            - name: BROKER_CLIENT_URL
              value: {{ .Values.brokerClientUrl }}
          {{- end }}
          {{- if eq .Values.scmType "gitlab" }}
         # Gitlab
            - name: BROKER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType}}-broker-token
                  key: "{{ .Values.scmType}}-broker-token-key"
            - name: GITLAB_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType}}-token
                  key: "{{ .Values.scmType}}-token-key"
            - name: GITLAB
              value: {{ .Values.gitlab }}              
            - name: PORT
              value: {{ .Values.deployment.container.containerPort | squote }}
            - name: BROKER_CLIENT_URL
              value: {{ .Values.brokerClientUrl }}
          {{- end }}
          {{- if eq .Values.scmType "azure-repos" }}
          # Azure Repos
            - name: BROKER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType}}-broker-token
                  key: "{{ .Values.scmType}}-broker-token-key"
            - name: AZURE_REPOS_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType}}-token
                  key: "{{ .Values.scmType}}-token-key"
            - name: AZURE_REPOS_ORG
              value: {{ .Values.azureReposOrg }}
            - name: AZURE_REPOS_HOST
              value: {{ .Values.azureReposHost }}        
            - name: PORT
              value: {{ .Values.deployment.container.containerPort | squote }}
            - name: BROKER_CLIENT_URL
              value: {{ .Values.brokerClientUrl }}
          {{- end }}
          {{- if eq .Values.scmType "artifactory" }}
          # Artifactory
            - name: BROKER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType}}-broker-token
                  key: "{{ .Values.scmType}}-broker-token-key"
            - name: ARTIFACTORY_URL
              value: {{ .Values.artifactoryUrl }}
          {{- end }}
          {{- if eq .Values.scmType "jira" }}
          # Jira
            - name: BROKER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType}}-broker-token
                  key: "{{ .Values.scmType}}-broker-token-key"
            - name: JIRA_USERNAME
              value: {{ .Values.jiraUsername }}
            - name: JIRA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType}}-token
                  key: "{{ .Values.scmType}}-token-key"
            - name: JIRA_HOSTNAME
              value: {{ .Values.jiraHostname }}        
            - name: PORT
              value: {{ .Values.deployment.container.containerPort | squote }}
            - name: BROKER_CLIENT_URL
              value: {{ .Values.brokerClientUrl }}
          {{- end }}
          {{- if eq .Values.scmType "container-registry-agent" }}
          # Container Registry Agent
            - name: BROKER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType}}-broker-token
                  key: "{{ .Values.scmType}}-broker-token-key"
            - name: CR_AGENT_URL
              value: http://cra-service:{{ .Values.deployment.container.crSnykPort | toString }}
            - name: CR_TYPE
              value: {{ .Values.crType }}
            - name: CR_BASE
              value: {{ .Values.crBase }} 
            - name: CR_USERNAME
              value: {{ .Values.crUsername }}  
            - name: CR_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType}}-token
                  key: "{{ .Values.scmType}}-token-key"                   
            - name: CR_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.scmType}}-token
                  key: "{{ .Values.scmType}}-token-key"
            - name: CR_ROLE_ARN
              value: {{ .Values.crRoleArn }}
            - name: CR_REGION
              value: {{ .Values.crRegion }}
            - name: CR_EXTERNAL_ID
              value: {{ .Values.crExternalId }}
            - name: PORT
              value: {{ .Values.deployment.container.containerPort | squote }}
            - name: BROKER_CLIENT_URL
              value: {{ .Values.brokerClientUrl }}
            - name: BROKER_CLIENT_VALIDATION_URL
              value: http://cra-service:{{ .Values.deployment.container.crSnykPort | toString }}/healthcheck
          {{- end }}
         
         # Code Agent
         {{- if .Values.enableCodeAgent }}
            - name: GIT_CLIENT_URL
              value: {{ default (printf "http://code-agent-service:%s" (.Values.deployment.container.caSnykPort | toString)) .Values.gitClientUrl }}
         {{- end }}     
         # Logging
            - name: LOG_LEVEL
              value: {{ .Values.logLevel }}
            - name: LOG_ENABLE_BODY
              value: {{ .Values.logEnableBody | squote }}
             
         {{- if .Values.caCert }}
         # HTTPS Inspection 
            - name: CA_CERT
              value: /home/node/cacert/{{ .Values.caCert }}
         {{- end }}
         
         {{- if .Values.httpsCert }}
         # HTTPS Config
            - name: HTTPS_CERT
              value: /home/node/httpscert/{{ .Values.httpsCert }}
         {{- end }}
         {{- if .Values.httpsKey }}
            - name: HTTPS_KEY
              value: /home/node/httpskey/{{ .Values.httpsKey }}
         {{- end }}
         
         {{- if .Values.tlsRejectUnauthorized  }}
         # Troubleshooting - Set to 0 for SSL inspection testing
            - name: NODE_TLS_REJECT_UNAUTHORIZED
              value: "0"
         {{- end }}

         {{- if .Values.httpProxy }}
         # HTTP Proxy Settings
            - name: HTTP_PROXY
              value: {{ .Values.httpProxy }}
         {{- end }}

         {{- if .Values.httpsProxy }}
         # HTTPS Proxy Settings
            - name: HTTPS_PROXY
              value: {{ .Values.httpsProxy }}
         {{- end }}

         {{- if (include "snyk-broker.acceptJson" .)}}
         # Accept.json Environment Variables
            - name: ACCEPT
              value: /home/node/private/accept.json
        {{ else }}
            - name: ACCEPT
              value: /home/node/accept.json
         {{- end }}

      # Mount Accept.json and Certs       
      volumes:
      {{- if (include "snyk-broker.acceptJson" .)}}
      - name: {{ include "snyk-broker.fullname" . }}-accept-volume
        configMap:
          name: {{ include "snyk-broker.fullname" . }}-accept-configmap
      {{- end }}
      {{- if .Values.caCert }}
      - name: {{ include "snyk-broker.fullname" . }}-cacert-volume
        configMap:
          name: {{ include "snyk-broker.fullname" . }}-cacert-configmap
      {{- end }}
      {{- if .Values.httpsCert }}
      - name: {{ include "snyk-broker.fullname" . }}-httpscert-volume
        configMap:
          name: {{ include "snyk-broker.fullname" . }}-httpscert-configmap
      {{- end }}
      {{- if .Values.httpsKey }}
      - name: {{ include "snyk-broker.fullname" . }}-httpskey-volume
        configMap:
          name: {{ include "snyk-broker.fullname" . }}-httpskey-configmap
      {{- end }}      